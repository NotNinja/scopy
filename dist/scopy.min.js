/*! Scopy v0.2.0 | (C) 2017 Alasdair Mercer, !ninja | MIT License */
!function(n,r){"object"==typeof exports&&"undefined"!=typeof module?module.exports=r():"function"==typeof define&&define.amd?define("scopy",r):n.Scopy=r()}(this,function(){"use strict";function n(r,o){if(this instanceof n)throw new TypeError("Scopy is not a constructor");return t(!1,o)(r)}function r(n,r){return function(){var o=Array.prototype.slice.call(arguments,0,1);return n.apply(null,o.concat(r))}}function o(n,o,t,u){t.forEach(function(t){o[t]=r(n[t],u)})}function t(n,r){return r=e(r),r.symbol?n?Symbol.for:Symbol:function(n){return"_"+n}}function u(n,r,o){o=e(o);var t=[];for(var u in n)Object.prototype.hasOwnProperty.call(n,u)&&(o.symbol||"_"!==u[0])&&t.push(r(n[u],u));return t}function e(n){return null==n&&(n={}),{symbol:n.symbol!==!1&&"function"==typeof Symbol}}return n.all=function(n,r){n=n||[];var o=t(!1,r),u={};return n.forEach(function(n){u[n]=o(n)}),u},n.entries=function(n,r){return u(n,function(n,r){return[r,n]},r)},n.for=function(n,r){return t(!0,r)(n)},n.for.all=function(n,r){n=n||[];var o=t(!0,r),u={};return n.forEach(function(n){u[n]=o(n)}),u},n.forAll=n.for.all,n.is=function(n,r){return null!=n&&(r=e(r),r.symbol?"symbol"==typeof n:"string"==typeof n&&"_"===n[0])},n.keys=function(n,r){return u(n,function(n,r){return r},r)},n.using=function(t){t=e(t);var u=r(n,t);return o(n,u,["all","entries","for","forAll","is","keys","values"],t),u.for.all=u.forAll,u.using=n.using,u},n.values=function(n,r){return u(n,function(n){return n},r)},n});

//# sourceMappingURL=scopy.min.js.map